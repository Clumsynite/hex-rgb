{"version":3,"sources":["App.js","index.js"],"names":["App","defaultInputStyle","backgroundColor","color","border","outline","width","margin","padding","borderBottom","borderRadius","fontSize","useState","hex","setHex","rgb","setRgb","setColor","inputStyle","setInputStyle","useEffect","className","style","value","onChange","e","target","isValid","test","validHex","replace","length","split","parseInt","substr","isHexColorLight","r","g","b","temp","convertHexToRgb","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAIe,SAASA,IACtB,IAAMC,EAAoB,CACxBC,gBAAiB,OACjBC,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,MAAO,OACPC,OAAQ,GACRC,QAAS,GACTC,aAAc,iBACdC,aAAc,EACdC,SAAU,UAGZ,EAAsBC,mBAAS,WAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsBF,mBAAS,gBAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA0BJ,mBAAS,QAAnC,mBAAOT,EAAP,KAAcc,EAAd,KACA,EAAoCL,mBAASX,GAA7C,mBAAOiB,EAAP,KAAmBC,EAAnB,KAeAC,qBAAU,cAAU,CAACP,IA2CrB,OACE,sBAAKQ,UAAU,MAAMC,MAAO,CAAEpB,gBAAiBW,EAAKV,SAApD,UACE,uBAAOoB,MAAOV,EAAKW,SAnBL,SAACC,GACjB,IAAQF,EAAUE,EAAEC,OAAZH,MACFI,EAPS,SAACd,GAEhB,MADc,gCACDe,KAAKf,GAKFgB,CAASN,GACnBpB,EA1CgB,SAACA,GACvB,IAAIU,EAAMV,EAAM2B,QAAQ,IAAK,IAS7B,OARmB,IAAfjB,EAAIkB,SACNlB,EAAImB,MAAM,IACVnB,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAK/B,IAHdoB,SAASpB,EAAIqB,OAAO,EAAG,GAAI,IAGD,IAF1BD,SAASpB,EAAIqB,OAAO,EAAG,GAAI,IAEW,IADtCD,SAASpB,EAAIqB,OAAO,EAAG,GAAI,KACkB,IACrC,IAgCNC,CAAgBZ,GAAS,OAAS,OAEhDT,EAAOS,GACHI,GACFX,EA/BoB,SAACH,GACvB,IAAIuB,EAAI,EACNC,EAAI,EACJC,EAAI,EACAnC,EAAQU,EAAIiB,QAAQ,IAAK,IAC/B,GAAqB,IAAjB3B,EAAM4B,OAAc,CACtB,IAAIQ,EAAOpC,EAAM6B,MAAM,IACvBI,EAA4B,GAAxBH,SAASM,EAAK,GAAI,IAAWN,SAASM,EAAK,GAAI,IACnDF,EAA4B,GAAxBJ,SAASM,EAAK,GAAI,IAAWN,SAASM,EAAK,GAAI,IACnDD,EAA4B,GAAxBL,SAASM,EAAK,GAAI,IAAWN,SAASM,EAAK,GAAI,SAC9C,GAAqB,IAAjBpC,EAAM4B,OAAc,CAC7B,IAAIQ,EAAOpC,EAAM6B,MAAM,IACvBI,EAAIH,SAASM,EAAK,GAAKA,EAAK,GAAI,IAChCF,EAAIJ,SAASM,EAAK,GAAKA,EAAK,GAAI,IAChCD,EAAIL,SAASM,EAAK,GAAKA,EAAK,GAAI,IAElC,MAAM,OAAN,OAAcH,EAAd,aAAoBC,EAApB,aAA0BC,EAA1B,KAeSE,CAAgBjB,IACvBJ,EAAc,2BAAKlB,GAAN,IAAyBE,QAAOD,gBAAiBqB,EAAOd,aAAa,aAAD,OAAeN,MAChGc,EAASd,IAITa,EAHUO,EAGH,eAFA,KAQiCD,MAAOJ,EAAYuB,YAAY,QACvE,uBAAOlB,MAAOR,EAAKS,SAAU,KAAMF,MAAOJ,EAAYuB,YAAY,WC9ExEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d60bd372.chunk.js","sourcesContent":["import \"./App.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nexport default function App() {\n  const defaultInputStyle = {\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n    border: \"none\",\n    outline: \"none\",\n    width: \"30vw\",\n    margin: 12,\n    padding: 12,\n    borderBottom: \"1px solid #fff\",\n    borderRadius: 0,\n    fontSize: \"1.5rem\",\n  };\n\n  const [hex, setHex] = useState(\"#000000\");\n  const [rgb, setRgb] = useState(\"rgb(0, 0, 0)\");\n  const [color, setColor] = useState(\"#000\");\n  const [inputStyle, setInputStyle] = useState(defaultInputStyle);\n\n  const isHexColorLight = (color) => {\n    let hex = color.replace(\"#\", \"\");\n    if (hex.length === 3) {\n      hex.split(\"\");\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    const c_r = parseInt(hex.substr(0, 2), 16);\n    const c_g = parseInt(hex.substr(2, 2), 16);\n    const c_b = parseInt(hex.substr(4, 2), 16);\n    const brightness = (c_r * 299 + c_g * 587 + c_b * 114) / 1000;\n    return brightness > 155;\n  };\n\n  useEffect(() => {}, [hex]);\n\n  const convertHexToRgb = (hex) => {\n    let r = 0,\n      g = 0,\n      b = 0;\n    const color = hex.replace(\"#\", \"\");\n    if (color.length === 3) {\n      let temp = color.split(\"\");\n      r = parseInt(temp[0], 16) * 16 + parseInt(temp[0], 16);\n      g = parseInt(temp[1], 16) * 16 + parseInt(temp[1], 16);\n      b = parseInt(temp[2], 16) * 16 + parseInt(temp[2], 16);\n    } else if (color.length === 6) {\n      let temp = color.split(\"\");\n      r = parseInt(temp[0] + temp[1], 16);\n      g = parseInt(temp[2] + temp[3], 16);\n      b = parseInt(temp[4] + temp[5], 16);\n    }\n    return `rgb(${r}, ${g}, ${b})`;\n  };\n\n  const validHex = (hex) => {\n    const regex = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    return regex.test(hex);\n  };\n\n  const changeHex = (e) => {\n    const { value } = e.target;\n    const isValid = validHex(value);\n    const color = isHexColorLight(value) ? \"#000\" : \"#fff\";\n\n    setHex(value);\n    if (isValid) {\n      setRgb(convertHexToRgb(value));\n      setInputStyle({ ...defaultInputStyle, color, backgroundColor: value, borderBottom: `1px solid ${color}` });\n      setColor(color);\n    } else if (!value) {\n      setRgb(\"\");\n    } else {\n      setRgb(\"rgb(0, 0, 0)\");\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: hex, color }}>\n      <input value={hex} onChange={changeHex} style={inputStyle} placeholder=\"hex\" />\n      <input value={rgb} onChange={null} style={inputStyle} placeholder=\"rgb\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}